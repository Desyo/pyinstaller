language: python

# Use the new container-based Travis infrastructure.
sudo: false

branches:
  except:
    - /pyup\/.*/

# Make sure we are on Ubuntu 14.04
dist: trusty

# Cache pip packages. Explicitly name the pip-cache directory since we
# use a custom `install` step which annuls `cache: pip`.
cache:
  directories:
    - $HOME/.cache/pip
    - $HOME/py37

os:
  - linux

jobs:
  fast_finish: true
  include:
    # macOS is first to account for the delay in starting the build on macOS.
    # This prevents the build from hanging on macOS as the last job to finish
    # in a stage.
    - stage: Test - PyInstaller
      os: osx
      language: generic
      python: 3.6
      cache:
        directories:
          - $HOME/Library/Caches/pip
      script: &script-test-pyinstaller
        # Run tests and speed them up by sending them to multiple CPUs.
        - >
          py.test -n 3 --maxfail 3
          tests/unit tests/functional
          --ignore=tests/functional/test_libraries.py
          --ignore=tests/functional/test_hooks

    - stage: Test - Libraries
      os: osx
      language: generic
      python: 3.6
      cache:
        directories:
          - $HOME/Library/Caches/pip
      script: &script-test-libraries
        - >
          py.test -n 3 --maxfail 3
          tests/functional/test_libraries.py tests/functional/test_hooks

    - &test-pyinstaller
      stage: Test - PyInstaller
      python: 2.7
      script: *script-test-pyinstaller

    - &test-libraries
      stage: Test - Libraries
      python: 2.7
      before_script: &start-xvfb
        - |
          # Run X Virtual Framebuffer to imitate a display
          export DISPLAY=:99.0 ;
          sh -e /etc/init.d/xvfb start ;
          sleep 3 # give xvfb some time to start
      # Run tests and speed them up by sending them to multiple CPUs.
      script: *script-test-libraries

    - &lint
      stage: Lint
      python: 2.7
      script:
        - >
            if [ "$TRAVIS_PULL_REQUEST" != "false" ] ; then
                git fetch origin $TRAVIS_BRANCH:$TRAVIS_BRANCH --depth 1;
                flake8-diff -v -v -v $TRAVIS_BRANCH;
            fi

    - <<: *test-pyinstaller
      python: 3.4
    - <<: *test-libraries
      python: 3.4

    - <<: *test-pyinstaller
      python: 3.5
    - <<: *test-libraries
      python: 3.5

    - <<: *test-pyinstaller
      python: 3.6
    - <<: *test-libraries
      python: 3.6
    - <<: *lint
      python: 3.6

    - <<: *test-pyinstaller
      python: 3.7-dev
      # As of 2018-05-31 travis does not provide Python 3.7.0b5, only an alpha
      # version is available. Thus we build 3.7.0b5 ourself, which also
      # requires building OpenSSL 1.0.2 (or 1.1), which is not available, too.
      before_install: &build-python-37
        - >
          echo "$TRAVIS_COMMIT_MESSAGE"
          | grep -E  '\[(skip travis|travis skip)\]'
          && echo "[skip travis] has been found, exiting."
          && exit 0 || true
        - |
          if [ ! -d $HOME/py37/lib/libcrypto.a ] ; then
            wget https://www.openssl.org/source/openssl-1.0.2k.tar.gz#6b3977c61f2aedf0f96367dcfb5c6e578cf37e7b8d913b4ecb6643c3cb88d8c0 ;
            mkdir -p $HOME/py37-build ;
            tar x -z -C $HOME/py37-build -f openssl-*.tar.gz ;
            cd $HOME/py37-build/openssl-* ;
            ./config --prefix=$HOME/py37 shared
            make ;
            make install ;
            cd -
          fi
        - |
          if [ ! -x $HOME/py37/bin/python3 ] ; then
            export PKG_CONFIG_PATH="$HOME/py37/lib/pkgconfig${PKG_CONFIG_PATH:+:$PKG_CONFIG_PATH}" ;
            wget https://www.python.org/ftp/python/3.7.0/Python-3.7.0b5.tar.xz ;
            mkdir -p $HOME/py37-build
            tar x -J -C $HOME/py37-build -f Python-3.7.0b5.tar.xz ;
            cd $HOME/py37-build/Python* ;
            # Make libssl available when Python is testing whether _ssl
            # was built correctly.
            export LD_LIBRARY_PATH="$HOME/py37/lib${LD_LIBRARY_PATH:+:$LD_LIBRARY_PATH}"
            ./configure --enable-shared --prefix=$HOME/py37 ;
            make ;
            make install ;
            cd - ;
          fi
        - export LD_LIBRARY_PATH="$HOME/py37/lib${LD_LIBRARY_PATH:+:$LD_LIBRARY_PATH}"
        - $HOME/py37/bin/python3 -m venv ~/virtualenv/python3.7
        - source ~/virtualenv/python3.7/bin/activate

    - <<: *test-libraries
      python: 3.7-dev
      before_install: *build-python-37

    - <<: *test-pyinstaller
      python: nightly
    - <<: *test-libraries
      python: nightly

  allow_failures:
      # Just tests how PyInstaller performs with upcoming Python 3.6
      - python: "nightly"
      - python: "3.7-dev"

addons:
  # Python packages should be installed by "pip" via the "test/requirements-library.txt" specification.
  apt:
    packages:
    # lxml dependencies.
    - libxml2-dev
    - libxslt1-dev
    # pyttsx dependencies.
    - libespeak1
    # SciPy dependencies.
    - gfortran
    - libatlas-base-dev

before_install:
  # Skip build if the commit message contains [skip travis] or [travis skip]
  - >
      echo "$TRAVIS_COMMIT_MESSAGE"
      | grep -E  '\[(skip travis|travis skip)\]'
      && echo "[skip travis] has been found, exiting."
      && exit 0 || true

  # Perform the manual steps on osx to install python3 and activate venv
  - >
      if [[ $TRAVIS_OS_NAME == 'osx' ]]; then
          brew update;
          brew upgrade python || brew install python;
          python3 -m venv venv;
          source venv/bin/activate;
      fi

install:
  # Update pip.
  - python -m pip install -U pip setuptools wheel | cat

  # Install dependencies for tests.
  - pip install -U -r tests/requirements-tools.txt | cat
  - >
    if [[ $TRAVIS_BUILD_STAGE_NAME == 'Test - libraries' ]] ; then
        pip install -U -r tests/requirements-libraries.txt | cat
    fi

  # Compile bootloader
  - cd bootloader
  - /usr/bin/python waf distclean all
  - cd ..

  # Install PyInstaller.
  - pip install -e . | cat


script:
  - true

notifications:
    irc:
        channels:
            - "irc.freenode.org#pyinstaller"
        use_notice: true
        # skip_join: true would require +n mode *not to be set on #pyinstaller
        skip_join: false
